# Author: Lucas Vilas-Boas
# Year: 2025
# Repo: https://github.com/lucoiso/luvk_example

# ----------- Global Definitions -----------
SET(LIBRARY_NAME LuVK_Example)

CMAKE_MINIMUM_REQUIRED(VERSION 3.28)
PROJECT(${LIBRARY_NAME} VERSION 0.0.1 LANGUAGES C CXX)

IF (POLICY CMP0048)
    CMAKE_POLICY(SET CMP0048 NEW)
ENDIF ()

SET(CMAKE_CXX_STANDARD 23)
SET(CMAKE_CXX_STANDARD_REQUIRED ON)
SET(CMAKE_CXX_EXTENSIONS OFF)
SET(CMAKE_CXX_SCAN_FOR_MODULES OFF)

SET(CMAKE_BINARY_DIR ${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE})
SET(CMAKE_INSTALL_PREFIX ${CMAKE_BINARY_DIR})

SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

SET(CMAKE_DEBUG_POSTFIX "d")
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${CMAKE_BINARY_DIR}/lib)
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG ${CMAKE_BINARY_DIR}/lib)
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${CMAKE_BINARY_DIR}/bin)

SET(CMAKE_RELEASE_POSTFIX "")
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${CMAKE_BINARY_DIR}/lib)
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE ${CMAKE_BINARY_DIR}/lib)
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${CMAKE_BINARY_DIR}/bin)

SET(CMAKE_INSTALL_LIBDIR ${CMAKE_BINARY_DIR}/lib)
SET(CMAKE_INSTALL_BINDIR ${CMAKE_BINARY_DIR}/bin)

# ------------- Library Setup --------------
SET(LUVK_EXAMPLE_SOURCE_BASE_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/src)
SET(LUVK_EXAMPLE_INCLUDE_BASE_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/include/)

FILE(GLOB_RECURSE SOURCE_FILES CONFIGURE_DEPENDS "${LUVK_EXAMPLE_SOURCE_BASE_DIRECTORY}/*.cpp")
FILE(GLOB_RECURSE HEADER_FILES CONFIGURE_DEPENDS "${LUVK_EXAMPLE_INCLUDE_BASE_DIRECTORY}/luvk_example/**/*.hpp")

ADD_EXECUTABLE(${LIBRARY_NAME} ${SOURCE_FILES})
SET_TARGET_PROPERTIES(${LIBRARY_NAME} PROPERTIES LINKER_LANGUAGE CXX)

TARGET_INCLUDE_DIRECTORIES(${LIBRARY_NAME} PRIVATE ${LUVK_EXAMPLE_SOURCE_BASE_DIRECTORY})
TARGET_INCLUDE_DIRECTORIES(${LIBRARY_NAME} PUBLIC ${LUVK_EXAMPLE_INCLUDE_BASE_DIRECTORY})

IF (UNIX)
    FIND_PACKAGE(SDL2 REQUIRED)
    TARGET_INCLUDE_DIRECTORIES(${LIBRARY_NAME} PRIVATE ${SDL2_INCLUDE_DIRS})
    TARGET_LINK_LIBRARIES(${LIBRARY_NAME} PRIVATE ${SDL2_LIBRARIES})
ELSE()
    SET(LUVK_VULKAN_LIBS_TO_LINK SDL2)
ENDIF (UNIX)

ADD_SUBDIRECTORY(luvk)

TARGET_LINK_LIBRARIES(${LIBRARY_NAME} PRIVATE luvk)

INSTALL(TARGETS ${LIBRARY_NAME} LIBRARY DESTINATION ${CMAKE_CURRENT_BINARY_DIR})

INCLUDE(FetchContent)

FETCHCONTENT_DECLARE(imgui
        GIT_REPOSITORY https://github.com/ocornut/imgui.git
        GIT_TAG v1.92.1-docking
)

FETCHCONTENT_MAKEAVAILABLE(imgui)

TARGET_SOURCES(${LIBRARY_NAME} PRIVATE
        ${imgui_SOURCE_DIR}/imgui.cpp
        ${imgui_SOURCE_DIR}/imgui_draw.cpp
        ${imgui_SOURCE_DIR}/imgui_demo.cpp
        ${imgui_SOURCE_DIR}/imgui_tables.cpp
        ${imgui_SOURCE_DIR}/imgui_widgets.cpp
)

TARGET_INCLUDE_DIRECTORIES(${LIBRARY_NAME} PUBLIC ${imgui_SOURCE_DIR})

IF (WIN32)
    ADD_CUSTOM_COMMAND(TARGET ${LIBRARY_NAME} POST_BUILD
            COMMAND ${CMAKE_COMMAND} -E copy_if_different $<TARGET_RUNTIME_DLLS:${LIBRARY_NAME}> $<TARGET_FILE_DIR:${LIBRARY_NAME}>
            COMMAND_EXPAND_LISTS
    )
ENDIF (WIN32)