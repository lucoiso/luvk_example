name: CMake Build Workflow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

permissions:
  contents: read

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: macos-latest
            c_compiler: clang
            cpp_compiler: clang++

    steps:
      - name: Checkout & Init Submodules
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Set reusable strings
        id: strings
        shell: bash
        run: echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

      - name: Get CMake and Ninja
        uses: lukka/get-cmake@latest
        with:
          cmakeVersion: latest
          ninjaVersion: latest

      - name: (Windows) Setup MSVC
        if: matrix.os == 'windows-latest'
        uses: TheMrMilchmann/setup-msvc-dev@v3
        with:
          arch: x64

      - name: (Ubuntu) Install Dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgl-dev libgl1-mesa-dev libx11-dev libx11-xcb-dev \
            libfontenc-dev libice-dev libsm-dev libxau-dev libxaw7-dev

      - name: Install Vulkan SDK
        uses: humbletim/install-vulkan-sdk@033219e2d69dd4d3e873e217eb385fdd4b4438f4
        with:
          version: 1.4.321.1
          cache: true

      - name: Configure
        run: cmake -S . -B ${{ steps.strings.outputs.build-output-dir }} -G Ninja -DCMAKE_BUILD_TYPE=Release

      - name: Build
        run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config Release
